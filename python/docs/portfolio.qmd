---
title: Portfolio Module Documentation
format:
  html:
    page-layout: full
---

### Portfolio

A class representing a Portfolio object.


<details>
<summary>`__new__`</summary>

Create a new Portfolio object.

**Parameters:**

- `ticker_symbols` (List[str]): List of ticker symbols in the portfolio.
- `benchmark_symbol` (str): The ticker symbol of the benchmark.
- `start_date` (str): The start date for historical data.
- `end_date` (str): The end date for historical data.
- `interval` (str): The interval for historical data.
- `confidence_level` (float): The confidence level for risk calculations.
- `risk_free_rate` (float): The risk-free rate for calculations.
- `objective_function` (Optional[str]): The objective function for optimization.
- `constraints` (Optional[List[Tuple[float, float]]]): Constraints for optimization.

**Returns:**

- `Portfolio`: A Portfolio object.

**Example:**

```{python}
from finalytics import Portfolio

portfolio = Portfolio(ticker_symbols=["AAPL", "GOOG", "MSFT", "NVDA", "BTC-USD"],
                      benchmark_symbol="^GSPC",
                      start_date="2020-01-01",
                      end_date="2024-01-01",
                      interval="1d",
                      confidence_level=0.95,
                      risk_free_rate=0.02,
                      objective_function="max_sharpe",
                      constraints=[(0, 1), (0, 1), (0, 1), (0, 1), (0,1)])
```
</details>


<details>
<summary>`optimization_results`</summary>

Get the optimization results for the portfolio.

**Returns:**

- `dict`: Dictionary containing the portfolio optimization results.

**Example:**

```{python}
optimization_results = portfolio.optimization_results()
print(optimization_results)
```
</details>


<details>
<summary>`performance_stats_table`</summary>

Display the performance stats table plot for the portfolio.

**Parameters:**

- `height` (Optional[int]): Optional height of the plot in pixels, defaults to None.
- `width` (Optional[int]): Optional width of the plot in pixels, defaults to None.

**Returns:**

- `Plot`: Plot object containing the performance stats table.

**Example:**

```{python}
performance_stats = portfolio.performance_stats_table()
performance_stats.show()
```
</details>


<details>
<summary>`optimization_chart`</summary>

Display the efficient frontier and allocation chart for the portfolio.

**Parameters:**

- `height` (Optional[int]): Optional height of the plot in pixels, defaults to None.
- `width` (Optional[int]): Optional width of the plot in pixels, defaults to None.

**Returns:**

- `Plot`: Plot object containing the portfolio optimization chart.

**Example:**

```{python}
optimization_chart = portfolio.optimization_chart()
optimization_chart.show()
```
</details>


<details>
<summary>`performance_chart`</summary>

Display the performance chart for the portfolio.

**Parameters:**

- `height` (Optional[int]): Optional height of the plot in pixels, defaults to None.
- `width` (Optional[int]): Optional width of the plot in pixels, defaults to None.

**Returns:**

- `Plot`: Plot object containing the performance chart.

**Example:**

```{python}
performance_chart = portfolio.performance_chart()
performance_chart.show()
```
</details>
