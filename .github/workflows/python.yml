name: Build and Release

on:
  push:
    branches: [main, master]
    tags: ['*']
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        working-directory: python
        run: python -m cibuildwheel --output-dir ../dist
        env:
          CIBW_BUILD: "cp39-* cp310-* cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *-musllinux*"
          CIBW_ARCHS_LINUX: auto
          CIBW_ARCHS_MACOS: universal2
          CIBW_ARCHS_WINDOWS: auto
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT: "MATURIN_VERBOSE=1"
          CIBW_BEFORE_BUILD: |
            mkdir -p /tmp/workspace
            cp -r /project/.. /tmp/workspace/
            cd /tmp/workspace/python

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/

  sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install maturin
        run: pip install maturin

      - name: Build sdist
        run: maturin sdist -o dist
        working-directory: python

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: python/dist/

  release:
    name: Publish to PyPI
    #if: startsWith(github.ref, 'refs/tags/') #nb: asterisk this line to release to pypi
    needs: [build, sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine all wheels and sdist into dist/
        run: |
          mkdir -p dist
          find artifacts -name '*.whl' -exec cp {} dist/ \;
          find artifacts -name '*.tar.gz' -exec cp {} dist/ \;

      - name: Publish to PyPI with maturin
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing dist/*
